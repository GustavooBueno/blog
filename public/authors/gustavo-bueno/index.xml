<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gustavo Bueno on gustavo bueno blog</title>
    <link>https://gustavobuenoblog.netlify.app/authors/gustavo-bueno/</link>
    <description>Recent content in Gustavo Bueno on gustavo bueno blog</description>
    <generator>Hugo</generator>
    <language>pt-br</language>
    <lastBuildDate>Wed, 25 Sep 2024 21:30:24 +0100</lastBuildDate>
    <atom:link href="https://gustavobuenoblog.netlify.app/authors/gustavo-bueno/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arrays em GOLANG</title>
      <link>https://gustavobuenoblog.netlify.app/5post/</link>
      <pubDate>Wed, 25 Sep 2024 21:30:24 +0100</pubDate>
      <guid>https://gustavobuenoblog.netlify.app/5post/</guid>
      <description>&lt;h1 id=&#34;definição&#34;&gt;Definição&lt;/h1&gt;&#xA;&lt;p&gt;Em Golang, arrays são uma coleção de elementos do mesmo tipo com tamanho fixo, definidos no momento da declaração.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;sintaxe-básica&#34;&gt;Sintaxe básica&lt;/h1&gt;&#xA;&lt;p&gt;Modelo:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;var nomeArray [tamanho]tipo&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Exemplo:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;var numeros [5]int&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;inicialização&#34;&gt;Inicialização&lt;/h1&gt;&#xA;&lt;p&gt;Podemos inicializar os elementos do array no momento da declaração&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;var letras = [3]string{&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;}&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;como-acessar-os-elementos&#34;&gt;Como acessar os elementos&lt;/h1&gt;&#xA;&lt;p&gt;Você pode acessar e modificar os elementos de um array usando o índice (começando em 0)&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;numeros[0] = 10   // Altera o primeiro elemento do array para 10&#xA;fmt.Println(numeros[0])  // Exibe o valor do primeiro elemento&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;comprimento-de-arrays&#34;&gt;Comprimento de arrays&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;fmt.Println(len(numeros))  // Saída: 5&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tipos em GOLANG</title>
      <link>https://gustavobuenoblog.netlify.app/4post/</link>
      <pubDate>Wed, 25 Sep 2024 20:30:24 +0100</pubDate>
      <guid>https://gustavobuenoblog.netlify.app/4post/</guid>
      <description>&lt;h1 id=&#34;tipos-básicos&#34;&gt;Tipos básicos&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Tipos Numéricos Inteiros&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;int - inteiro&lt;/li&gt;&#xA;&lt;li&gt;uint - inteiro sem sinal&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Tipos Numéricos de Ponto Flutuante&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;float32 ou float64&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Booleanos&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;bool&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Strings&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;string&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;tamanho-das-variáveis&#34;&gt;Tamanho das variáveis&lt;/h1&gt;&#xA;&lt;p&gt;Podemos especificar o tamanho das variáveis em bits: int8, int16, int32, int64&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;como-criar-um-tipo&#34;&gt;Como criar um tipo&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package main&#xA;&#xA;import &amp;#34;fmt&amp;#34;&#xA;&#xA;type ID string&#xA;&#xA;func main() {&#xA;&#x9;var palavra ID = &amp;#34;IDteste&amp;#34;&#xA;&#xA;&#x9;fmt.Println(palavra)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Escreva type (nome do tipo) (tipo)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;como-printar-uma-variável-baseado-em-seu-tipo&#34;&gt;Como printar uma variável baseado em seu tipo&lt;/h1&gt;&#xA;&lt;p&gt;Principais:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Declaração e atribuição de variáveis em GOLANG</title>
      <link>https://gustavobuenoblog.netlify.app/3post/</link>
      <pubDate>Tue, 24 Sep 2024 08:30:24 +0100</pubDate>
      <guid>https://gustavobuenoblog.netlify.app/3post/</guid>
      <description>&lt;h1 id=&#34;a-regra-de-go&#34;&gt;A regra de GO&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Variáveis que forem declaradas devem ser utilizadas, se não o programa irá apontar um erro.&lt;/li&gt;&#xA;&lt;li&gt;A declaração pode ocorrer de forma &lt;strong&gt;explícita&lt;/strong&gt; ou &lt;strong&gt;implícita&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;forma-explícita&#34;&gt;Forma explícita&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;var x int&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;forma-implícita&#34;&gt;Forma implícita&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;var z = 10&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Go infere que z é do tipo int&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;múltiplas-declarações&#34;&gt;Múltiplas declarações&lt;/h1&gt;&#xA;&lt;p&gt;Podemos fazer:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;var a, b, c int&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ou então:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var(&#xA;    a int&#xA;    b string&#xA;    c float64&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;atribuição&#34;&gt;Atribuição&lt;/h1&gt;&#xA;&lt;p&gt;Atribuição pode ser feita de forma &lt;strong&gt;direta&lt;/strong&gt; ou &lt;strong&gt;separada&lt;/strong&gt; na declaração&lt;/p&gt;</description>
    </item>
    <item>
      <title>Primeiro hello world em GOLANG</title>
      <link>https://gustavobuenoblog.netlify.app/2post/</link>
      <pubDate>Tue, 24 Sep 2024 08:00:24 +0100</pubDate>
      <guid>https://gustavobuenoblog.netlify.app/2post/</guid>
      <description>&lt;h1 id=&#34;código-que-será-utilizado&#34;&gt;Código que será utilizado&lt;/h1&gt;&#xA;&lt;p&gt;Primeiramente crie um arquivo main.go e cole o seguinte código:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package main&#xA;&#xA;import &amp;#34;fmt&amp;#34;&#xA;&#xA;func main() {&#xA;    fmt.Println(&amp;#34;Hello, World!&amp;#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Rode no terminal o comando: &lt;code&gt;go run main.go&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;package-main&#34;&gt;package main&lt;/h1&gt;&#xA;&lt;p&gt;Todo código GO começa com a declaração de um pacote. O pacote main é o ponto de partida do programa. Quando é feita a execução de um programa GO, ele procura a função main.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;import-fmt&#34;&gt;import &amp;ldquo;fmt&amp;rdquo;&lt;/h1&gt;&#xA;&lt;p&gt;Importa o pacote fmt (abreviação de format). É um pacote com funções para formatar entrada e saída de dados.&lt;/p&gt;</description>
    </item>
    <item>
      <title>O que é GOLANG?</title>
      <link>https://gustavobuenoblog.netlify.app/1post/</link>
      <pubDate>Mon, 23 Sep 2024 16:55:24 +0100</pubDate>
      <guid>https://gustavobuenoblog.netlify.app/1post/</guid>
      <description>&lt;h1 id=&#34;criação&#34;&gt;Criação&lt;/h1&gt;&#xA;&lt;p&gt;A linguagem GO foi criada pelo Google em 2007 e lançada em 2009.&#xA;Seus criadores foram &lt;strong&gt;Robert Griesemer, Rob Pike e Ken Thompson.&lt;/strong&gt; Todos eles possuem uma vasta experiência na criação de sistemas de software.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;motivação&#34;&gt;Motivação&lt;/h1&gt;&#xA;&lt;p&gt;GO foi projetado para resolver algumas limitações das linguagens usadas na Google. Como:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Python: lentidão&lt;/li&gt;&#xA;&lt;li&gt;C/C++: complexo e demora para compilar&lt;/li&gt;&#xA;&lt;li&gt;Java: muito verboso e complexo de atualizar com o tempo&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;o-que-foi-feito&#34;&gt;O que foi feito&lt;/h1&gt;&#xA;&lt;p&gt;Criaram então uma linguagem que tinha como seus princípios:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
